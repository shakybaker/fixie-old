@model IEnumerable<Fixie.Domain.Board>

@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table>
    <tr>
        <th></th>
        <th>
            Created
        </th>
        <th>
            CreatedBy
        </th>
        <th>
            Modified
        </th>
        <th>
            ModifiedBy
        </th>
        <th>
            Name
        </th>
        <th>
            Description
        </th>
        <th>
            Type
        </th>
        <th>
            Lanes
        </th>
        <th>
            PriorityLevelTemplate
        </th>
        <th>
            ComplexityLevelTemplate
        </th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.ActionLink("Edit", "Edit", new { id=item.Id }) |
            @Html.ActionLink("Details", "Details", new { id=item.Id }) |
            @Html.ActionLink("Delete", "Delete", new { id=item.Id })
        </td>
        <td>
			@String.Format("{0:g}", item.Created)
        </td>
        <td>
			@item.CreatedBy
        </td>
        <td>
			@String.Format("{0:g}", item.Modified)
        </td>
        <td>
			@item.ModifiedBy
        </td>
        <td>
			@item.Name
        </td>
        <td>
			@item.Description
        </td>
        <td>
			@Html.DisplayTextFor(_ => item.Type).ToString()
        </td>
        <td>
			@(item.Lanes == null ? "None" : item.Lanes.Count.ToString())
        </td>
        <td>
			@(item.PriorityLevelTemplate == null ? "None" : item.PriorityLevelTemplate.Name)
        </td>
        <td>
			@(item.ComplexityLevelTemplate == null ? "None" : item.ComplexityLevelTemplate.Name)
        </td>
    </tr>
}

</table>


